<?xml version="1.0" encoding="utf-8"?>
<ctl:package
 xmlns:wms-1.3.0="https://cite.opengeospatial.org/wms-1.3.0/src/ctl"
 xmlns:main="https://cite.opengeospatial.org/wms-1.3.0/src/ctl/main.xml"
 xmlns:functions="https://cite.opengeospatial.org/wms-1.3.0/src/ctl/functions.xml"
 xmlns:basic_elements="https://cite.opengeospatial.org/wms-1.3.0/src/ctl/basic_elements.xml"
 xmlns:getcapabilities="https://cite.opengeospatial.org/wms-1.3.0/src/ctl/getcapabilities.xml"
 xmlns:getmap="https://cite.opengeospatial.org/wms-1.3.0/src/ctl/getmap.xml"
 xmlns:getfeatureinfo="https://cite.opengeospatial.org/wms-1.3.0/src/ctl/getfeatureinfo.xml"
 xmlns:recommendations="https://cite.opengeospatial.org/wms-1.3.0/src/ctl/recomendations.xml"
 xmlns:dims="https://cite.opengeospatial.org/wms-1.3.0/src/ctl/dimensions.xml"
 xmlns:interactive="https://cite.opengeospatial.org/wms-1.3.0/src/ctl/interactive.xml"
 xmlns:basic="https://cite.opengeospatial.org/wms-1.3.0/src/ctl/basic.xml"
 xmlns:queryable="https://cite.opengeospatial.org/wms-1.3.0/src/ctl/queryable.xml"
 xmlns:raster_elevation="https://cite.opengeospatial.org/wms-1.3.0/src/ctl/raster_elevation.xml"
 xmlns:vector_elevation="https://cite.opengeospatial.org/wms-1.3.0/src/ctl/vector_elevation.xml"
 xmlns:time="https://cite.opengeospatial.org/wms-1.3.0/src/ctl/time.xml"
 xmlns:ccf="http://www.opengis.net/cite/complex"
 xmlns:cdf="http://www.opengis.net/cite/data"
 xmlns:cgf="http://www.opengis.net/cite/geometry"
 xmlns:citef="http://www.opengis.net/cite/functions"
 xmlns:ctl="http://www.occamlab.com/ctl"
 xmlns:gml="http://www.opengis.net/gml"
 xmlns:ogc="http://www.opengis.net/ogc"
 xmlns:parsers="http://www.occamlab.com/te/parsers"
 xmlns:saxon="http://saxon.sf.net/"
 xmlns:wms="http://www.opengis.net/wms"
 xmlns:xlink="http://www.w3.org/1999/xlink"
 xmlns:xs="http://www.w3.org/2001/XMLSchema"
 xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
 xmlns:xi="http://www.w3.org/2001/XInclude">

   <xi:include href="functions.xml"/>
   <xi:include href="basic_elements.xml"/>
   <xi:include href="getcapabilities.xml"/>
   <xi:include href="dimensions.xml"/>
   <xi:include href="getmap.xml"/>
   <xi:include href="getfeatureinfo.xml"/>
   <xi:include href="recommendations.xml"/>
   <xi:include href="basic.xml"/>
   <xi:include href="queryable.xml"/>
   <xi:include href="raster_elevation.xml"/>
   <xi:include href="vector_elevation.xml"/>
   <xi:include href="time.xml"/>

   <ctl:suite name="wms-1.3.0:ets-wms13-auto">
      <ctl:title>Web Map Service (WMS) 1.3.0</ctl:title>
      <ctl:description>Validates that a WMS 1.3.0 is compliant.</ctl:description>
      <ctl:link>docs/wms/1.3.0/</ctl:link>
      <ctl:link>data/data-wms-1.3.0.zip</ctl:link>
      <ctl:starting-test>main:main-auto</ctl:starting-test>
   </ctl:suite>

   <ctl:test name="main:main-auto">
      <ctl:param name="capabilities-url"/>
      <ctl:param name="updatesequence"/>
      <ctl:param name="high-updatesequence"/>
      <ctl:param name="low-updatesequence"/>
      <ctl:param name="basic" />
      <ctl:param name="queryable"/>
      <ctl:param name="raster_elevation"/>
      <ctl:param name="vector_elevation"/>
      <ctl:param name="time"/>
      <ctl:param name="recommended"/>
      <ctl:assertion>The implementation under test complies with the WMS 1.3.0 specification.</ctl:assertion>
      <ctl:code>
         <xsl:variable name="capabilities">
            <ctl:request>
               <ctl:url>
                  <xsl:value-of select="$capabilities-url"/>
               </ctl:url>
               <ctl:method>get</ctl:method>
            </ctl:request>
         </xsl:variable>

         <xsl:variable name="high-updatesequence">
            <xsl:choose>
               <xsl:when test="$updatesequence = 'auto'">
                  <xsl:value-of select="functions:increment-updatesequence($capabilities/wms:WMS_Capabilities/@updateSequence, 1)"/>
               </xsl:when>
               <xsl:otherwise>
                  <xsl:value-of select="$high-updatesequence"/>
               </xsl:otherwise>
            </xsl:choose>
         </xsl:variable>

         <xsl:variable name="low-updatesequence">
            <xsl:choose>
               <xsl:when test="$updatesequence = 'auto'">
                  <xsl:value-of select="functions:increment-updatesequence($capabilities/wms:WMS_Capabilities/@updateSequence, -1)"/>
               </xsl:when>
               <xsl:otherwise>
                  <xsl:value-of select="$low-updatesequence"/>
               </xsl:otherwise>
            </xsl:choose>
         </xsl:variable>

         <xsl:if test="not($capabilities/wms:WMS_Capabilities)">
            <ctl:message>Error: The capabilities document does not contain a root element named WMS_Capabilities in the &quot;http://www.opengis.net/wms&quot; namespace.</ctl:message>
            <ctl:message>Further processing suspended.</ctl:message>
            <ctl:fail/>
         </xsl:if>

         <ctl:for-each select="$capabilities/wms:WMS_Capabilities">

            <ctl:call-test name="main:universal">
               <ctl:with-param name="high-updatesequence" select="$high-updatesequence"/>
               <ctl:with-param name="low-updatesequence" select="$low-updatesequence"/>
            </ctl:call-test>

            <xsl:if test="$basic='basic' or $queryable='queryable'">
               <ctl:call-test name="main:std-data-present">
                  <ctl:with-param name="raster_elevation" select="$raster_elevation"/>
                  <ctl:with-param name="time" select="$time"/>
               </ctl:call-test>
            </xsl:if>

            <xsl:if test="$basic='basic'">
               <ctl:call-test name="basic:main">
                  <ctl:with-param name="is-interactive-enabled" select="'no'"/>
               </ctl:call-test>
            </xsl:if>

            <xsl:if test="$queryable='queryable'">
               <ctl:call-test name="queryable:main"/>
            </xsl:if>

            <xsl:if test="$raster_elevation='raster_elevation'">
               <ctl:call-test name="raster_elevation:main"/>
            </xsl:if>

            <xsl:if test="$vector_elevation='vector_elevation'">
               <ctl:call-test name="vector_elevation:main"/>
            </xsl:if>

            <xsl:if test="$time='time'">
               <ctl:call-test name="time:main"/>
            </xsl:if>

            <xsl:if test="$recommended = 'recommended'">
               <ctl:call-test name="recommendations:main"/>
            </xsl:if>

         </ctl:for-each>
      </ctl:code>
   </ctl:test>

   <ctl:test name="main:universal">
      <ctl:param name="high-updatesequence"/>
      <ctl:param name="low-updatesequence"/>
      <ctl:context>WMS_Capabilities element</ctl:context>
      <ctl:assertion>Universal (dataset independent) request behaves properly.</ctl:assertion>
      <ctl:code>
         <!-- Exhaustively test each Layer/CRS combination? -->
         <xsl:variable name="exhaustive">no</xsl:variable>

         <ctl:call-test name="basic_elements:main"/>

         <ctl:call-test name="getcapabilities:main">
            <ctl:with-param name="high-updatesequence" select="$high-updatesequence"/>
            <ctl:with-param name="low-updatesequence" select="$low-updatesequence"/>
         </ctl:call-test>

         <ctl:call-test name="getmap:main">
            <ctl:with-param name="exhaustive" select="$exhaustive"/>
         </ctl:call-test>

         <ctl:call-test name="getfeatureinfo:main"/>

         <ctl:call-test name="dims:main"/>
      </ctl:code>
   </ctl:test>

   <ctl:test name="main:std-data-present">
      <ctl:param name="raster_elevation"/>
      <ctl:param name="time"/>
      <ctl:context>Capabilities XML</ctl:context>
      <ctl:assertion>The server implements the CITE standard dataset in subsettable, resizable layers that support CRS:84.</ctl:assertion>
      <ctl:link title="Test requirements">docs/wms/1.3.0/#requirements</ctl:link>
      <ctl:code>
         <xsl:variable name="root-layer" select="wms:Capability/wms:Layer"/>
         <xsl:variable name="titles">
            <title>cite:BasicPolygons</title>
            <title>cite:Bridges</title>
            <title>cite:Buildings</title>
            <title>cite:DividedRoutes</title>
            <title>cite:Forests</title>
            <title>cite:Lakes</title>
            <title>cite:MapNeatline</title>
            <title>cite:NamedPlaces</title>
            <title>cite:Ponds</title>
            <title>cite:RoadSegments</title>
            <title>cite:Streams</title>
            <xsl:if test="$raster_elevation='raster_elevation'">
               <title>cite:Terrain</title>
            </xsl:if>
            <xsl:if test="$time='time'">
               <title>cite:Autos</title>
            </xsl:if>
         </xsl:variable>
         <xsl:for-each select="$titles/title">
            <xsl:variable name="title" select="."/>
            <xsl:variable name="layer" select="$root-layer/descendant-or-self::wms:Layer[wms:Title = $title]"/>
            <xsl:choose>
               <xsl:when test="not($layer/wms:Title)">
                  <ctl:message>Error: No layer titled <xsl:value-of select="$title"/> found.</ctl:message>
                  <ctl:fail/>
               </xsl:when>
               <xsl:otherwise>
                  <xsl:if test="not($layer/ancestor-or-self::wms:Layer[wms:CRS = 'CRS:84'])">
                     <ctl:message>Error: Layer titled <xsl:value-of select="$title"/> must support CRS:84.</ctl:message>
                     <ctl:fail/>
                  </xsl:if>
                  <xsl:if test="functions:boolean-as-integer($layer/@noSubsets) = 1">
                     <ctl:message>Error: Layer titled <xsl:value-of select="$title"/> must allow subsets.</ctl:message>
                     <ctl:fail/>
                  </xsl:if>
                  <xsl:if test="functions:boolean-as-integer($layer/@fixedWidth) != 0">
                     <ctl:message>Error: Layer titled <xsl:value-of select="$title"/> must not have a fixed size.</ctl:message>
                     <ctl:fail/>
                  </xsl:if>
               </xsl:otherwise>
            </xsl:choose>
         </xsl:for-each>
      </ctl:code>
   </ctl:test>

</ctl:package>

